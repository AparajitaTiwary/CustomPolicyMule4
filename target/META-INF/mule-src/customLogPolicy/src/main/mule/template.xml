<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 
      xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy" xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
               http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">


    <http-policy:proxy name="{{{policyId}}}-custom-policy">
        <http-policy:source>
			{{#if logContent}}
			   <set-variable variableName="enableloggingContent" value="{{{logContentCondition}}}"/>
			{{/if}}
			
			<choice>
           <when expression= "#[vars.enableloggingContent == false]" >
             <logger message= "#[payload]" />
			
          <http-policy:execute-next/>
			</when>
			<otherwise>
              <logger message="Avoid logging" />
           </otherwise>
           </choice>
			
			

         

        </http-policy:source>
    </http-policy:proxy>


</mule>
